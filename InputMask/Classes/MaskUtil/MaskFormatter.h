//
//  MaskFormatter.h
//  MaskedInput
//
//  Created by Egor Taflanidi on 03/03/27 H.
//  Copyright (c) 27 Heisei RedMadRobot LLC. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "MaskUtil.h"

@class MaskComponent;

/**
 Утилита, форматирующая текст согласно графу предоставленных маскируюших 
 компонентов.
 */
@interface MaskFormatter : MaskUtil

/**
 Отформатировать текст согласно маскируюшим компонентам.
 
 Процесс форматирования изредка может оставлять нежелательные артефакты 
 (префиксы), которые следует удалять посредством применения метода -cleanText:
 сущности MaskCleaner.
 
 @param text - текст, который необходимо отформатировать. Не nil.
 
 @return Возвращает отформатированный текст.
 @see MaskCleaner
 */
- (NSString *)formatText:(NSString *)text;

/**
 Метод, подсчитывающий разницу по количеству символов после форматирования 
 строки на определённом диапазоне.
 
 Так, при вставке символов возвращаемое значение увеличивается, при удалении -
 уменьшается.
 
 Например, для маски по шаблону 
 +7 ([000]) [000] [00] [00] 
 при введении числа "8" строка приводится к виду
 +7 (8
 Таким образом, разница составляет +4 символа: "+7 (".
 
 При вставке из буфера обмена значения "8а" строка также приводится к виду
 +7 (8
 Однако, на этот раз разница будет составлять всего +3 символа: 4 символа "+7 ("
 добавилось, один символ "а" - был удалён.
 
 Данный метод предполагается использовать для корректирования положения каретки
 ввода текста. Например, при введении строки "8а" в поле с маской 
 +7 ([000]) [000] [00] [00]
 предполагается, что каретка будет находиться после второго символа. Таким 
 образом, уже после форматирования фокус ввода останется на позиции между 
 семёркой и пробелом, что неправильно.
 Корректировка +3 позволяет сдвинуть каретку на правильную позицию.
 
 @param text - текст, который будет отформатирован. Не nil.
 @param range - диапазон, в котором были внесены изменения.
 
 Пример применения.
 Шаблон: 
 +7 ([000]) [000] [00] [00]
 Строка на экране:
 +7 (123
 Пользователь вводит цифру 4.
 Диапазон изменений: location = 7; length = 1.
 Форматирование:
 +7 (123) 4
 Разница составляет: +2 символа: ")" и пробел.
 
 @return Возвращает разницу по количеству символов после форматирования строки
 на определённом диапазоне.
 */
- (NSInteger)differenceInText:(NSString *)text 
       afterFormattingInRange:(NSRange)range;

@end
